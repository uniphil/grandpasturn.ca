:root {
  --bg: #faecd2;
  --flow-space: 1.5em;
  --flow-space-h: 1em;
  --text-sm: 0.75em;
  background-color: var(--bg);
  font-size: 14pt;
  line-height: 1.5em;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

.flow > * + * {
  margin-top: var(--flow-space);
}

.flow.left > * + * {
  margin-top: 0;
  margin-left: var(--flow-space-h);
}

.container {
  margin: 0 auto;
  max-width: 672px;
}

.boring.container {
  max-width: 28em;
  padding: 0 var(--flow-space-h);
  text-align: justify;
}

.unlist > li {
  list-style-type: none;
  display: block;
}

nav, ul.nav {
  display: flex;
  justify-content: space-between;
}

ul.nav {
  justify-content: center;
}

nav h1 {
  flex-grow: 1;
}

h1 {
  text-align: center;
}

p:not(:first-of-type) {
  text-indent: 3em;
}

ul.actual > li {
  margin-left: 2em;
}

.the-grid {
  display: block;
  height: auto;
  width: 100%;
}

.bowls-container {
  position: relative;
}

@media screen and (max-width: 500px) {
  .container {
    max-width: unset;
  }
  .bowls-container {
    width: 192%;
  }
}

@media screen and (max-width: 400px) {
  .container {
    max-width: unset;
  }
  .bowls-container {
    width: 246%;
  }
}

.bowls {
  box-shadow: 0 0 1.1em 1.1em var(--bg) inset;
  display: grid;
  grid-gap: 1%;
  grid-template-columns: repeat(9, 1fr);
  grid-template-rows: repeat(9, 1fr);
  height: 100%;
  left: 0;
  padding: 1.9em 2em 2.1em 1.9em;
  position: absolute;
  top: 0;
  width: 100%;
}

.bowls > li > a {
/*  background: hsla(0, 0%, 0%, 0.3);*/
  display: block;
  width: 100%;
  height: 100%;
  position: relative;
  transition: background 0.2s;
}
.bowls > li > a:before {
  --blur: 0.4em;
  background: #fff;
  bottom: var(--blur);
  box-shadow: 0 0 var(--blur) var(--blur) #fff;
  content: '';
  display: block;
  left: var(--blur);
  opacity: 0;
  position: absolute;
  right: var(--blur);
  top: 1em;
  transition: opacity 0.2s;
}
.bowls > li > a:hover:before {
  opacity: 0.4;
}
.bowls > li > a:target:before {
  opacity: 0.5;
}

.bowl-overlay {
  align-items: center;
  background: hsla(0, 0%, 0%, 0.5);
  display: flex;
  height: 100vh;
  justify-content: center;
  left: 0;
  position: fixed;
  top: 0;
  width: 100vw;
}

.overlay-content {
  background: #fff;
  border-radius: 0.5em;
  box-shadow: 0.1em 0.2em 0.667em hsla(0, 0%, 0%, 0.333);
  margin: 1em;
  padding: 1em;
}

.overlay-image {
  max-width: 300px;
  height: auto;
}

.bowl-detail {
  display: flex;
}

.bowl-info p {
  text-indent: 0;
}

.button {
  background: dodgerblue;
  border-radius: 0.667em;
  color: #fff;
  cursor: pointer;
  display: inline-block;
  font-family: sans-serif;
  line-height: 1em;
  padding: 0.55em 1em 0.45em;
  text-decoration: none;
}
.button:hover,
.button:active {
  background: skyblue;
}

footer {
  color: #666;
  font-size: var(--text-sm);
  margin-top: var(--flow-space);
  padding-top: var(--flow-space);
  text-align: center;
}

/* remaining rules are from html5 boilerplate
 * MIT licensed -- https://github.com/h5bp/html5-boilerplate/blob/a7820f12647fdb93b19340391ac4c60de15352ce/LICENSE.txt */

/*
 * Hide only visually, but have it available for screen readers:
 * https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 *
 * 1. For long content, line feeds are not interpreted as spaces and small width
 *    causes content to wrap 1 word per line:
 *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
 */

.visually-hidden {
  border: 0;
  clip: rect(0, 0, 0, 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  /* 1 */
}

/*
 * Extends the .visually-hidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */

.visually-hidden.focusable:active,
.visually-hidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  white-space: inherit;
  width: auto;
}
